reactiveclass A(13) {
	knownrebecs {
		B kr_B;
		C kr_C;
	}
	statevars {
		int j;
		boolean f;
	}
	A() {
		j = 2;
		f = false;
	}
	msgsrv a0() {
		f = true;
		kr_B.b0();
		if (f)
		j = 1;
		kr_C.c1();
		j = 8;
		kr_C.c2();
	}
}

reactiveclass B(13) {
	knownrebecs {
		A kr_A;
		C kr_C;
		D kr_D;
		E kr_E;
	}
	statevars {
		int e;
		boolean c;
		boolean b;
	}
	B() {
		e = 3;
		c = false;
		b = true;
		self.b1();
	}
	msgsrv b0() {
		e = 0;
		e = 5;
		kr_E.e2();
		c = false;
		if (b)
		kr_E.e3();
	}
	msgsrv b1() {
		b = false;
		kr_E.e4();
		if (b)
		c = true;
		kr_C.c2();
		kr_E.e1();
		kr_C.c3();
		kr_C.c4();
	}
	msgsrv b2() {
		b = false;
		kr_C.c1();
		if (c)
		b = true;
	}
}

reactiveclass C(14) {
	knownrebecs {
		B kr_B;
		D kr_D;
		E kr_E;
	}
	statevars {
		boolean b;
	}
	C() {
		b = false;
	}
	msgsrv c0() {
		if (b)
		b = false;
		kr_E.e0();
		b = false;
		kr_B.b2();
		kr_E.e3();
	}
	msgsrv c1() {
		b = true;
		if (b)
		kr_E.e3();
		if (b)
		b = true;
	}
	msgsrv c2() {
		b = false;
		b = true;
		if (b)
		kr_E.e3();
	}
	msgsrv c3() {
		b = false;
		kr_E.e4();
		if (b)
		kr_E.e3();
		if (b)
		b = true;
		kr_D.d1();
		kr_D.d2();
	}
	msgsrv c4() {
		b = true;
		kr_B.b2();
		if (b)
		kr_E.e3();
	}
}

reactiveclass D(13) {
	knownrebecs {
		A kr_A;
		C kr_C;
		E kr_E;
	}
	statevars {
		int h;
	}
	D() {
		h = 1;
	}
	msgsrv d0() {
		h = 0;
		h = 0;
		h = 6;
		kr_E.e3();
	}
	msgsrv d1() {
		h = 2;
		kr_E.e3();
		h = 9;
		h = 2;
		kr_C.c2();
		kr_C.c4();
		kr_C.c1();
	}
	msgsrv d2() {
		h = 6;
		kr_C.c1();
		h = 8;
		kr_C.c0();
		h = 4;
		kr_A.a0();
		kr_C.c2();
	}
}

reactiveclass E(13) {
	knownrebecs {
		A kr_A;
		B kr_B;
		C kr_C;
		D kr_D;
	}
	statevars {
		int f;
	}
	E() {
		f = 3;
	}
	msgsrv e0() {
		f = 4;
		kr_C.c1();
		f = 2;
		kr_D.d0();
		kr_C.c2();
	}
	msgsrv e1() {
		f = 2;
		kr_D.d1();
		f = 0;
		kr_C.c4();
		f = 0;
		kr_B.b2();
		kr_C.c1();
		kr_C.c2();
	}
	msgsrv e2() {
		f = 9;
	}
	msgsrv e3() {
		f = 5;
	}
	msgsrv e4() {
		f = 1;
		kr_D.d1();
		f = 3;
		kr_C.c4();
		kr_C.c1();
		kr_C.c2();
	}
}

main {
	A instanceA(instanceB, instanceC):();
	B instanceB(instanceA, instanceC, instanceD, instanceE):();
	C instanceC(instanceB, instanceD, instanceE):();
	D instanceD(instanceA, instanceC, instanceE):();
	E instanceE(instanceA, instanceB, instanceC, instanceD):();
}
